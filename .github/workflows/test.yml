name: Tests

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test-python36:
    runs-on: ubuntu-latest
    container: python:3.6-slim-buster

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y gettext git

    - name: Install package with test dependencies
      run: |
        python -m pip install --upgrade pip --no-cache-dir
        pip install -e .[test] --no-cache-dir

    - name: Run Python 3.6 specific tests
      run: |
        echo "Testing package imports on Python 3.6..."
        python -c "import sys; print(f'Python version: {sys.version}')"
        python -c "import s3compat; print('s3compat package imported successfully')"
        python -c "
        # Test OSF addon import behavior (should fail gracefully without dependencies)
        try:
            import s3compat.osf_addon
            print('Warning: OSF addon imported without dependencies (unexpected)')
        except ImportError as e:
            print('Expected: OSF addon import failed without dependencies')
        "

    - name: Test lazy loading functionality
      run: |
        echo "Testing lazy loading..."
        python -c "
        import s3compat
        print('Package loaded with lazy loading')
        print('OSF addon available:', hasattr(s3compat, 'osf_addon'))
        print('Waterbutler provider available:', hasattr(s3compat, 'waterbutler_provider'))
        
        # Test that we can access OSF addon without waterbutler dependencies
        try:
            import s3compat.osf_addon
            print('OSF addon imports successfully without waterbutler')
        except ImportError as e:
            print(f'OSF addon import failed (expected in waterbutler-only env): {e}')
        "

    - name: Test entry points
      run: |
        echo "Testing entry points..."
        python -c "
        import pkg_resources
        osf_entries = list(pkg_resources.iter_entry_points('rdm.admin_integrations', 's3compat'))
        print(f'OSF admin integration entry points: {len(osf_entries)}')
        wb_entries = list(pkg_resources.iter_entry_points('waterbutler.providers', 's3compat'))
        print(f'Waterbutler provider entry points: {len(wb_entries)}')
        "

